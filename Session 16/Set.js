// SET:-
// -> is used to remove the duplicate elements.

// let s = new Set();

// s.add("1");
// s.add("1");
// s.add("2");
// s.add("3");
// s.add("3");
// s.add("3");
// s.add("4");

// console.log(s);


// ==============================================================================================
// We can pass array in Set:
// let arr = [1, 2, 3, 4, 3, 3, 2, 1];

// ==============================================================================================
// We can pass string in Set:
// let s = "abc";
// s = new Set(s);
// console.log(s);


// ==============================================================================================
// Converting Array to Set:
// let s = new Set(arr);
// console.log(s);


// ==============================================================================================
// Converting Set to Array:
// Array.from(s);
// console.log(s);


// ==============================================================================================
// Traversing set:
// Using for of -
// for (let elem of s) {
//     console.log(elem);
// }

// Using forEach -
// s.forEach(elem => {
//     console.log(elem);
// });

// ----------------------------------------------------------------------------------------------
// size:
// console.log(s.size);

// ----------------------------------------------------------------------------------------------
// has:
// console.log(s.has(3));

// ----------------------------------------------------------------------------------------------
// delete:
// s.delete(3);
// console.log(s);

// ----------------------------------------------------------------------------------------------
// clear():
// s.clear();
// console.log(s);


// ==============================================================================================
// -> Set do preserve the insertion order
// let arr2 = [5, 6, 3, 2, 4, 2, 1, 4];
// let s2 = new Set(arr2);

// for (let elem of s2) {
//     console.log(elem);
// }

// console.log(s2);